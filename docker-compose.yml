version: '3.8'

services:
  prometheus:
    image: ${DOCKER_PROMETHEUS_IMAGE?Variable not set}:v${PROMETHEUS_VERSION?Variable not set}
    build:
      context: ./prometheus
      args:
        PROMETHEUS_VERSION: ${PROMETHEUS_VERSION?Variable not set}
    networks:
      default:
      traefik-public:
      prometheus:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=${RETENTION?Variable not set}
      - --web.enable-remote-write-receiver
      - --web.enable-admin-api
      - --enable-feature=exemplar-storage
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.${STACK_NAME?Variable not set}.prometheus-data == true
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 256M
      labels:
        - traefik.enable=true
        - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK?Variable not set}
        - traefik.constraint-label=${TRAEFIK_PUBLIC_TAG?Variable not set}
        - traefik.http.middlewares.${STACK_NAME?Variable not set}-prometheus-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}
        - traefik.http.routers.${STACK_NAME?Variable not set}-prometheus-http.rule=Host(`prometheus.${DOMAIN?Variable not set}`)
        - traefik.http.routers.${STACK_NAME?Variable not set}-prometheus-http.entrypoints=http
        - traefik.http.routers.${STACK_NAME?Variable not set}-prometheus-http.middlewares=https-redirect,common-security-headers
        - traefik.http.routers.${STACK_NAME?Variable not set}-prometheus-https.rule=Host(`prometheus.${DOMAIN?Variable not set}`)
        - traefik.http.routers.${STACK_NAME?Variable not set}-prometheus-https.entrypoints=https
        - traefik.http.routers.${STACK_NAME?Variable not set}-prometheus-https.tls=true
        - traefik.http.routers.${STACK_NAME?Variable not set}-prometheus-https.tls.certresolver=le
        - traefik.http.routers.${STACK_NAME?Variable not set}-prometheus-https.middlewares=common-security-headers,${STACK_NAME?Variable not set}-prometheus-auth
        - traefik.http.services.${STACK_NAME?Variable not set}-prometheus.loadbalancer.server.port=9090
        - prometheus.port=9090

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v${CADVISOR_VERSION?Variable not set}
    networks:
      - ${PROMETHEUS_NETWORK?Variable not set}
    command: -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      labels:
        - prometheus.port=8080

  node-exporter:
    image: prom/node-exporter:v${NODE_EXPORTER_VERSION?Variable not set}
    # missing Swarm options
    # network_mode: host
    # pid: host
    networks:
      prometheus:
    command: --path.rootfs=/host
    volumes:
      - /:/host:ro,rslave
    deploy:
      mode: global
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
      labels:
        - prometheus.port=9100

  grafana:
    image: ${DOCKER_GRAFANA_IMAGE?Variable not set}:v${GRAFANA_VERSION?Variable not set}
    depends_on:
      - prometheus
    build:
      context: ./grafana
      args:
        GRAFANA_VERSION: ${GRAFANA_VERSION?Variable not set}
    networks:
      default:
      traefik-public:
      prometheus:
    environment:
      - GF_SECURITY_ADMIN_USER=${USERNAME?Variable not set}
      - GF_SECURITY_ADMIN_PASSWORD=${PASSWORD?Variable not set}
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://${DOMAIN?Variable not set}/
      - GF_SERVER_ENABLE_GZIP=true
      - GF_INSTALL_PLUGINS=${GRAFANA_PLUGINS?Variable not set}
      - GF_FEATURE_TOGGLES_ENABLE=${GRAFANA_FEATURES?Variable not set}
    volumes:
      - grafana-data:/var/lib/grafana
    deploy:
      placement:
        constraints:
          - node.labels.${STACK_NAME?Variable not set}.grafana-data == true
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 512M
      labels:
        - traefik.enable=true
        - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK?Variable not set}
        - traefik.constraint-label=${TRAEFIK_PUBLIC_TAG?Variable not set}
        - traefik.http.routers.${STACK_NAME?Variable not set}-grafana-http.rule=Host(`${DOMAIN?Variable not set}`) && PathPrefix(`/`)
        - traefik.http.routers.${STACK_NAME?Variable not set}-grafana-http.entrypoints=http
        - traefik.http.routers.${STACK_NAME?Variable not set}-grafana-http.middlewares=https-redirect,common-security-headers
        - traefik.http.routers.${STACK_NAME?Variable not set}-grafana-https.rule=Host(`${DOMAIN?Variable not set}`) && PathPrefix(`/`)
        - traefik.http.routers.${STACK_NAME?Variable not set}-grafana-https.entrypoints=https
        - traefik.http.routers.${STACK_NAME?Variable not set}-grafana-https.tls=true
        - traefik.http.routers.${STACK_NAME?Variable not set}-grafana-https.tls.certresolver=le
        - traefik.http.routers.${STACK_NAME?Variable not set}-grafana-https.middlewares=common-security-headers
        - traefik.http.services.${STACK_NAME?Variable not set}-grafana.loadbalancer.server.port=3000
        - prometheus.port=9090

volumes:
  prometheus-data:
  grafana-data:

networks:
  default:
    name: ${STACK_NAME?Variable not set}_default
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 10.0.3.0/24
  traefik-public:
    name: ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
    external: ${TRAEFIK_PUBLIC_IS_EXTERNAL?Variable not set}
  prometheus:
    name: ${PROMETHEUS_NETWORK?Variable not set}
    external: ${PROMETHEUS_IS_EXTERNAL?Variable not set}
