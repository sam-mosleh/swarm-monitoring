# config file version
apiVersion: 1

# list of datasources that should be deleted from the database
deleteDatasources:
  - name: Tempo
    orgId: 1

# list of datasources to insert/update depending
# what's available in the database
datasources:
  # <string, required> name of the datasource. Required
  - name: Tempo
    # <string, required> datasource type. Required
    type: tempo
    # <string> Sets a custom UID to reference this data source in other parts of the configuration. If not specified, Grafana generates one.
    uid: tempo
    # <string, required> access mode. proxy or direct (Server or Browser in the UI). Required
    access: proxy
    # <string> url
    url: http://tempo-gateway:8080
    # <bool> mark as default datasource. Max one per org
    isDefault: false
    version: 1
    # Tempo data
    jsonData:
      httpMethod: GET
      tracesToLogs:
        datasourceUid: loki
        # tags:
        #   - instance
        #   - service
        #   - namespace
        mappedTags: [{ key: 'service.namespace', value: 'namespace' }, { key: 'service.name', value: 'service' }, { key: 'service.instance.id', value: 'instance' }]
        mapTagNamesEnabled: true
        spanStartTimeShift: -10m
        spanEndTimeShift: 10m
        filterByTraceID: true
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: prometheus
        tags: [{ key: 'service.namespace', value: 'namespace' }, { key: 'service.name', value: 'job' }, { key: 'service.instance.id', value: 'instance' }]
        # queries:
        #   - name: 'Sample query'
        #     query: 'sum(rate(traces_spanmetrics_latency_bucket{$__tags}[5m]))'
        # customQuery: true
        # query: 'method="${__span.tags.method}"'
        # spanStartTimeShift: '1h'
        # spanEndTimeShift: '-1h'
      serviceMap:
        datasourceUid: prometheus
      search:
        hide: false
      nodeGraph:
        enabled: true
      lokiSearch:
        datasourceUid: loki
      # spanBar:
      #   type: 'Tag'
      #   tag: 'http.path'
